""" from typing import Union
from fastapi import FastAPI, HTTPException
from fastapi.middleware.cors import CORSMiddleware
from pydantic import BaseModel

app = FastAPI()

# Configura CORS para desarrollo
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# Añade este modelo para recibir datos
class LoginData(BaseModel):
    username: str
    password: str

@app.get("/")
def read_root():
    return {"Hello": "World"} 

""" @app.get("/login")
def login():
    return {"Hello": "si funciono "} """

@app.post("/login")
def login(login_data: LoginData):
    # Simula almacenamiento (aquí iría tu lógica de base de datos)

    if login_data.username == "admin" and login_data.password == "admin":
        print(f"Datos recibidos: Usuario: {login_data.username}, Contraseña: {login_data.password}")
        return {
            "estado": "recibido con exito",
            "datos_recibidos": login_data.dict()  # Envía los datos de vuelta para confirmación
        }
    else:
        print(f"Login invalido ingrese las credenciales correctas")
        raise HTTPException(status_code=401, detail="Credenciales inválidas")  
    
@app.get("/two")
def two():
    return {"ola": "si ves esto funciono " + "aaaaa"}

@app.get("/items/{item_id}")
def read_item(item_id: int, q: Union[str, None] = None):
    return {"item_id": item_id, "q": q} """